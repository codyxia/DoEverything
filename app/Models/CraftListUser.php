<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Hash;

/**
 * App\Models\CraftListUser
 *
 * @property int $id
 * @property string $company_id
 * @property string|null $uuid
 * @property string|null $user_name
 * @property int $telephone
 * @property string $password
 * @property string|null $name
 * @property int $status
 * @property string|null $remember_token
 * @property \Illuminate\Support\Carbon $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser query()
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser whereCompanyId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser whereName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser wherePassword($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser whereRememberToken($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser whereStatus($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser whereTelephone($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser whereUpdatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser whereUserName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CraftListUser whereUuid($value)
 * @mixin \Eloquent
 */
class CraftListUser extends Model
{
    use HasFactory;

    protected $connection = 'mysql_craft';
    protected $table = 'users';

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::creating(function ($q){
            return $q->password = Hash::make($q->telephone);
        });
    }

}
